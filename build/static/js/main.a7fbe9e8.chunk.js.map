{"version":3,"sources":["pages/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","React","createElement","className","LazySharedPage","lazy","LazyHome","LazyAbout","LazyMenu","LazyReserve","LazyError","App","Fragment","HashRouter","Routes","Route","path","element","Suspense","fallback","index","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"sNAKeA,MAJCA,IACPC,IAAAC,cAAA,MAAIC,UAAU,oBAAmB,2BCG1C,MAAMC,EAAiBH,IAAMI,KAAK,IAAM,oDAClCC,EAAWL,IAAMI,KAAK,IAAM,8BAC5BE,EAAYN,IAAMI,KAAK,IAAM,8BAC7BG,EAAWP,IAAMI,KAAK,IAAM,8BAC5BI,EAAcR,IAAMI,KAAK,IAAM,8BAC/BK,EAAYT,IAAMI,KAAK,IAAM,8BA+DpBM,MA7Df,WACE,OACEV,IAAAC,cAAAD,IAAAW,SAAA,KACEX,IAAAC,cAACW,IAAU,KACTZ,IAAAC,cAACY,IAAM,KACLb,IAAAC,cAACa,IAAK,CACJC,KAAK,IACLC,QACEhB,IAAAC,cAACD,IAAMiB,SAAQ,CAACC,SAAUlB,IAAAC,cAACF,EAAO,OAChCC,IAAAC,cAACE,EAAc,QAKnBH,IAAAC,cAACa,IAAK,CACJK,OAAK,EACLH,QACEhB,IAAAC,cAACD,IAAMiB,SAAQ,CAACC,SAAUlB,IAAAC,cAACF,EAAO,OAChCC,IAAAC,cAACI,EAAQ,SAIfL,IAAAC,cAACa,IAAK,CACJC,KAAK,QACLC,QACEhB,IAAAC,cAACD,IAAMiB,SAAQ,CAACC,SAAUlB,IAAAC,cAACF,EAAO,OAChCC,IAAAC,cAACK,EAAS,SAIhBN,IAAAC,cAACa,IAAK,CACJC,KAAK,OACLC,QACEhB,IAAAC,cAACD,IAAMiB,SAAQ,CAACC,SAAUlB,IAAAC,cAACF,EAAO,OAChCC,IAAAC,cAACM,EAAQ,SAIfP,IAAAC,cAACa,IAAK,CACJC,KAAK,UACLC,QACEhB,IAAAC,cAACD,IAAMiB,SAAQ,CAACC,SAAUlB,IAAAC,cAACF,EAAO,OAChCC,IAAAC,cAACO,EAAW,SAIlBR,IAAAC,cAACa,IAAK,CACJC,KAAK,IACLC,QACEhB,IAAAC,cAACD,IAAMiB,SAAQ,CAACC,SAAUlB,IAAAC,cAACF,EAAO,OAChCC,IAAAC,cAACQ,EAAS,cClDbW,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlC,IAAAC,cAACD,IAAMmC,WAAU,KACfnC,IAAAC,cAACS,EAAG,QAORU,K","file":"static/js/main.a7fbe9e8.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Loading = () => {\r\n  return <h1 className=\"text-center my-3\">ðŸŒ€ Loading...</h1>;\r\n};\r\n\r\nexport default Loading;\r\n","import \"./App.css\";\nimport React from \"react\";\n// or import { Suspense } from \"react\";\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\nimport Loading from \"./pages/Loading\";\nconst LazySharedPage = React.lazy(() => import(\"./pages/SharedPage\"));\nconst LazyHome = React.lazy(() => import(\"./pages/Home\"));\nconst LazyAbout = React.lazy(() => import(\"./pages/About\"));\nconst LazyMenu = React.lazy(() => import(\"./pages/Menu\"));\nconst LazyReserve = React.lazy(() => import(\"./pages/Reserve\"));\nconst LazyError = React.lazy(() => import(\"./pages/Error\"));\n\nfunction App() {\n  return (\n    <>\n      <HashRouter>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <React.Suspense fallback={<Loading />}>\n                <LazySharedPage />\n              </React.Suspense>\n            }\n          >\n            {/* the index will always match the path=\"/\" */}\n            <Route\n              index\n              element={\n                <React.Suspense fallback={<Loading />}>\n                  <LazyHome />\n                </React.Suspense>\n              }\n            />\n            <Route\n              path=\"about\"\n              element={\n                <React.Suspense fallback={<Loading />}>\n                  <LazyAbout />\n                </React.Suspense>\n              }\n            />\n            <Route\n              path=\"menu\"\n              element={\n                <React.Suspense fallback={<Loading />}>\n                  <LazyMenu />\n                </React.Suspense>\n              }\n            />\n            <Route\n              path=\"reserve\"\n              element={\n                <React.Suspense fallback={<Loading />}>\n                  <LazyReserve />\n                </React.Suspense>\n              }\n            />\n            <Route\n              path=\"*\"\n              element={\n                <React.Suspense fallback={<Loading />}>\n                  <LazyError />\n                </React.Suspense>\n              }\n            />\n          </Route>\n        </Routes>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}